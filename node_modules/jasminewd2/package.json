{
  "_args": [
    [
      {
        "raw": "jasminewd2@^2.0.0",
        "scope": null,
        "escapedName": "jasminewd2",
        "name": "jasminewd2",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "/Users/heqiang/WebstormProjects/GITHUB/angular4-demo/node_modules/protractor"
    ]
  ],
  "_cnpm_publish_time": 1484965295045,
  "_from": "jasminewd2@^2.0.0",
  "_hasShrinkwrap": false,
  "_id": "jasminewd2@2.0.0",
  "_location": "/jasminewd2",
  "_nodeVersion": "6.9.2",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/jasminewd2-2.0.0.tgz_1484965294807_0.43819506419822574"
  },
  "_npmUser": {
    "name": "angularcore",
    "email": "angular-core+npm@google.com"
  },
  "_npmVersion": "3.10.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "jasminewd2@^2.0.0",
    "scope": null,
    "escapedName": "jasminewd2",
    "name": "jasminewd2",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/protractor"
  ],
  "_resolved": "http://registry.npm.taobao.org/jasminewd2/download/jasminewd2-2.0.0.tgz",
  "_shasum": "10aacd2c588c1ceb6a0b849f1a7f3f959f777c91",
  "_shrinkwrap": null,
  "_spec": "jasminewd2@^2.0.0",
  "_where": "/Users/heqiang/WebstormProjects/GITHUB/angular4-demo/node_modules/protractor",
  "author": {
    "name": "Julie Ralph",
    "email": "ju.ralph@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/angular/jasminewd/issues"
  },
  "dependencies": {},
  "description": "WebDriverJS adapter for Jasmine2.",
  "devDependencies": {
    "@types/jasmine": "^2.5.40",
    "@types/node": "^6.0.56",
    "@types/selenium-webdriver": "^2.53.38",
    "jasmine": "2.4.1",
    "jshint": "^2.9.4",
    "selenium-webdriver": "3.0.1",
    "tslint": "^4.2.0",
    "tslint-eslint-rules": "^3.2.3",
    "typescript": "^2.0.10",
    "vrsource-tslint-rules": "^4.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "10aacd2c588c1ceb6a0b849f1a7f3f959f777c91",
    "size": 11350,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/jasminewd2/download/jasminewd2-2.0.0.tgz"
  },
  "engines": {
    "node": ">= 6.9.x"
  },
  "gitHead": "ff79938e5f3d1a2c0ffde989b2221a4054066b4a",
  "homepage": "https://github.com/angular/jasminewd",
  "keywords": [
    "test",
    "testing",
    "webdriver",
    "webdriverjs",
    "selenium",
    "jasmine"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "angularcore",
      "email": "angular-core+npm@google.com"
    },
    {
      "name": "hankduan",
      "email": "duan.hank@gmail.com"
    },
    {
      "name": "petebd",
      "email": "pete@bacondarwin.com"
    }
  ],
  "name": "jasminewd2",
  "optionalDependencies": {},
  "publish_time": 1484965295045,
  "readme": "jasminewd [![Build Status](https://travis-ci.org/angular/jasminewd.svg?branch=master)](https://travis-ci.org/angular/jasminewd)\n=========\n\nAdapter for Jasmine-to-WebDriverJS. Used by [Protractor](http://www.github.com/angular/protractor).\n\n**Important:** There are two active branches of jasminewd.\n\n - [master](https://github.com/angular/jasminewd/tree/master) is an adapter for Jasmine 1.3, and uses the package minijasminenode. It is published to npm as `jasminewd`.\n - [jasminewd2](https://github.com/angular/jasminewd/tree/jasminewd2) is an adapter for Jasmine 2.x, and uses the package jasmine. It is published to npm as `jasminewd2`.\n\nFeatures\n--------\n\n - Automatically makes tests asynchronously wait until the WebDriverJS control flow is empty.\n\n - If a `done` function is passed to the test, waits for both the control flow and until done is called.\n\n - If a test returns a promise, waits for both the control flow and the promise to resolve.\n\n - Enhances `expect` so that it automatically unwraps promises before performing the assertion.\n\nInstallation\n------------\n```\nnpm install jasminewd2\n```\n\nUsage\n-----\n\nIn your setup:\n\n```js\nvar JasmineRunner = require('jasmine');\nvar jrunner = new JasmineRunner();\nvar webdriver = require('selenium-webdriver');\n\nglobal.driver = new webdriver.Builder().\n    usingServer('http://localhost:4444/wd/hub').\n    withCapabilities({browserName: 'chrome'}).\n    build();\n\nrequire('jasminewd2').init(driver.controlFlow(), webdriver);\n\njrunner.projectBaseDir = '';\njrunner.execute(['**/*_spec.js']);\n```\n\nIn your tests:\n\n```js\ndescribe('tests with webdriver', function() {\n  it('will wait until webdriver is done', function() {\n    // This will be an asynchronous test. It will finish once webdriver has\n    // loaded the page, found the element, and gotten its text.\n    driver.get('http://www.example.com');\n\n    var myElement = driver.findElement(webdriver.By.id('hello'));\n\n    // Here, expect understands that myElement.getText() is a promise,\n    // and resolves it before asserting.\n    expect(myElement.getText()).toEqual('hello world');\n  });\n})\n```\n\nTypeScript\n----------\n\nFor the typings related to the changes in the global jasmine variables (e.g.\nallowing `it()` blocks to return a promise), we publish the package\n`@types/jasminewd2`.  If you are writing tests using jasminewd (including\nProtractor tests), be sure to include `@types/jasminewd2` in your\n`devDependencies`, as these global type modifications are ***not*** bundled with\nthe `jasminewd2` npm module.\n\njasminewd also exports one function directly: `init`.  Unfortunately, we do not\npublish typings for this function.  If you call this function directly (e.g. you\nare a Protractor dev), you should simply do:\n\n```ts\nrequire('jasminewd2').init(controlFlow, webdriver);\n```\n\n`async` functions / `await`\n---------------------------\n\n`async` functions and the `await` keyword are likely coming in ES2017 (ES8), and\navailable via several compilers.  At the moment, they often break the WebDriver\ncontrol flow.\n([GitHub issue](https://github.com/SeleniumHQ/selenium/issues/3037)).  You can\nstill use them, but if you do then you will have to use `await`/Promises for\nalmost all your synchronization.  See `spec/asyncAwaitAdapterSpec.ts` and\n`spec/asyncAwaitErrorSpec.ts` for examples.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/angular/jasminewd.git"
  },
  "scripts": {
    "jshint": "jshint index.js spec",
    "lint": "npm run jshint && npm run tslint",
    "pretest": "npm run lint && npm run tsc",
    "test": "scripts/test.sh",
    "tsc": "tsc; cp spec/*.js built_spec",
    "tslint": "tslint spec/*.ts"
  },
  "version": "2.0.0"
}
