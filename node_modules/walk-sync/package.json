{
  "_args": [
    [
      {
        "raw": "walk-sync@^0.3.1",
        "scope": null,
        "escapedName": "walk-sync",
        "name": "walk-sync",
        "rawSpec": "^0.3.1",
        "spec": ">=0.3.1 <0.4.0",
        "type": "range"
      },
      "/Users/heqiang/WebstormProjects/GITHUB/angular4-demo/node_modules/@angular/cli"
    ]
  ],
  "_cnpm_publish_time": 1470414613230,
  "_from": "walk-sync@^0.3.1",
  "_hasShrinkwrap": false,
  "_id": "walk-sync@0.3.1",
  "_location": "/walk-sync",
  "_nodeVersion": "6.2.2",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/walk-sync-0.3.1.tgz_1470414612660_0.859438338316977"
  },
  "_npmUser": {
    "name": "stefanpenner",
    "email": "stefan.penner@gmail.com"
  },
  "_npmVersion": "3.10.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "walk-sync@^0.3.1",
    "scope": null,
    "escapedName": "walk-sync",
    "name": "walk-sync",
    "rawSpec": "^0.3.1",
    "spec": ">=0.3.1 <0.4.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@angular/cli"
  ],
  "_resolved": "http://registry.npm.taobao.org/walk-sync/download/walk-sync-0.3.1.tgz",
  "_shasum": "558a16aeac8c0db59c028b73c66f397684ece465",
  "_shrinkwrap": null,
  "_spec": "walk-sync@^0.3.1",
  "_where": "/Users/heqiang/WebstormProjects/GITHUB/angular4-demo/node_modules/@angular/cli",
  "author": {
    "name": "Jo Liss",
    "email": "joliss42@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/joliss/node-walk-sync/issues"
  },
  "dependencies": {
    "ensure-posix-path": "^1.0.0",
    "matcher-collection": "^1.0.0"
  },
  "description": "Get an array of recursive directory contents",
  "devDependencies": {
    "jshint-tap-simple": "^1.0.2",
    "rimraf": "^2.4.3",
    "tap": "^1.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "558a16aeac8c0db59c028b73c66f397684ece465",
    "size": 3935,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/walk-sync/download/walk-sync-0.3.1.tgz"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "340d11e657a06084554871ea0245006d2d15f67c",
  "homepage": "https://github.com/joliss/node-walk-sync#readme",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "hjdivad",
      "email": "npm@hjdivad.com"
    },
    {
      "name": "joliss",
      "email": "joliss42@gmail.com"
    },
    {
      "name": "stefanpenner",
      "email": "stefan.penner@gmail.com"
    }
  ],
  "name": "walk-sync",
  "optionalDependencies": {},
  "publish_time": 1470414613230,
  "readme": "# node-walk-sync\n\n[![Build Status](https://travis-ci.org/joliss/node-walk-sync.png?branch=master)](https://travis-ci.org/joliss/node-walk-sync)\n[![Build status](https://ci.appveyor.com/api/projects/status/sqe785gqb2qfmxbx/branch/master?svg=true)](https://ci.appveyor.com/project/joliss/node-walk-sync/branch/master)\n\nReturn an array containing all recursive files and directories under a given\ndirectory, similar to Unix `find`. Follows symlinks. Bare-bones, but\nvery fast.\n\nSimilar to [`wrench.readdirSyncRecursive`](https://github.com/ryanmcgrath/wrench-js#synchronous-operations),\nbut adds trailing slashes to directories.\n\nNot to be confused with [node-walk](https://github.com/coolaj86/node-walk),\nwhich has both an asynchronous and a synchronous API.\n\n## Installation\n\n```bash\nnpm install --save walk-sync\n```\n\n## Usage\n\n```js\nvar walkSync = require('walk-sync');\nvar paths = walkSync('project')\n```\n\nGiven `project/one.txt` and `project/subdir/two.txt`, `paths` will be the following\narray:\n\n```js\n['one.txt', 'subdir/', 'subdir/two.txt']\n```\n\nDirectories come before their contents, and have a trailing forward-slash (on\nall platforms).\n\nSymlinks are followed.\n\n### Entries\n\nSometimes, it is important to get additional information from a walk of a\ndirectory; for instance if the downstream consumer needs to stat the files we\ncan leverage the stats from the walk.\n\nTo accommodate, `walkSync.entries(path [, options])` is also provided, instead\nof returning a list of files and/or directories it returns an array of objects\nwhich correspond to a given file or directory, except with more data.\n\n```\nentry.relativePath\nentry.mode  // => fs.statSync(fullPath).mode\nentry.size  // => fs.statSync(fullPath).size\nentry.mtime // => fs.statSync(fullPath).mtime.getTime()\n\nentry.isDirectory() // => true if directory\n```\n\n### Options\n\n* `globs`: An array of globs. Only files and directories that match at least\n  one of the provided globs will be returned.\n\n    ```js\n    var paths = walkSync('project', { globs: ['subdir/**/*.txt'] });\n    // => ['subdir/two.txt']\n    ```\n\n    As an alternative to string globs, you can pass an array of precompiled\n    [`minimatch.Minimatch`](https://github.com/isaacs/minimatch#minimatch-class)\n    instances. This is faster and allows to specify your own globbing options.\n\n* `directories` (default: true): Pass `false` to only return files, not\n  directories:\n\n    ```js\n    var paths = walkSync('project', { directories: false })\n    // => ['one.txt', 'subdir/two.txt']\n    ```\n\n* `ignore`: An array of globs. Files and directories that match at least one\n  of the provided globs will be pruned while searching.\n\n    ```js\n    var paths = walkSync('project', { ignore: ['subdir'] })\n    // => ['one.txt']\n    ```\n\n## Background\n\n`walkSync(baseDir)` is a faster substitute for\n\n```js\nglob.sync('**', {\n  cwd: baseDir,\n  dot: true,\n  mark: true,\n  strict: true\n})\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/joliss/node-walk-sync.git"
  },
  "scripts": {
    "test": "tap --timeout 2 ./test/*.js",
    "test:debug": "tap --debug-brk --timeout 9999 ./test/*.js"
  },
  "version": "0.3.1"
}
