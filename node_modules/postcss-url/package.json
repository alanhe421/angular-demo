{
  "_args": [
    [
      {
        "raw": "postcss-url@^5.1.2",
        "scope": null,
        "escapedName": "postcss-url",
        "name": "postcss-url",
        "rawSpec": "^5.1.2",
        "spec": ">=5.1.2 <6.0.0",
        "type": "range"
      },
      "/Users/heqiang/WebstormProjects/GITHUB/angular4-demo/node_modules/@angular/cli"
    ]
  ],
  "_cnpm_publish_time": 1462132218336,
  "_from": "postcss-url@^5.1.2",
  "_hasShrinkwrap": false,
  "_id": "postcss-url@5.1.2",
  "_location": "/postcss-url",
  "_nodeVersion": "5.11.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/postcss-url-5.1.2.tgz_1462132215873_0.18399095349013805"
  },
  "_npmUser": {
    "name": "moox",
    "email": "m@moox.io"
  },
  "_npmVersion": "3.8.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "postcss-url@^5.1.2",
    "scope": null,
    "escapedName": "postcss-url",
    "name": "postcss-url",
    "rawSpec": "^5.1.2",
    "spec": ">=5.1.2 <6.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@angular/cli"
  ],
  "_resolved": "http://registry.npm.taobao.org/postcss-url/download/postcss-url-5.1.2.tgz",
  "_shasum": "98b3165be8d592471cb0caadde2c0d1f832f133e",
  "_shrinkwrap": null,
  "_spec": "postcss-url@^5.1.2",
  "_where": "/Users/heqiang/WebstormProjects/GITHUB/angular4-demo/node_modules/@angular/cli",
  "author": {
    "name": "Maxime Thirouin"
  },
  "bugs": {
    "url": "https://github.com/postcss/postcss-url/issues"
  },
  "dependencies": {
    "directory-encoder": "^0.7.2",
    "js-base64": "^2.1.5",
    "mime": "^1.2.11",
    "minimatch": "^3.0.0",
    "mkdirp": "^0.5.0",
    "path-is-absolute": "^1.0.0",
    "postcss": "^5.0.0"
  },
  "description": "PostCSS plugin to rebase or inline on url().",
  "devDependencies": {
    "eslint": "^1.10.3",
    "eslint-config-i-am-meticulous": "^2.0.0",
    "npmpub": "^3.0.1",
    "postcss-import": "^7.0.0",
    "tape": "^4.0.3"
  },
  "directories": {},
  "dist": {
    "shasum": "98b3165be8d592471cb0caadde2c0d1f832f133e",
    "size": 6542,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/postcss-url/download/postcss-url-5.1.2.tgz"
  },
  "eslintConfig": {
    "extends": "eslint-config-i-am-meticulous/es5"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "5e528eb42d6852c6becc3c82c9a0a381a48d0fb4",
  "homepage": "https://github.com/postcss/postcss-url#readme",
  "keywords": [
    "css",
    "postcss",
    "postcss-plugin",
    "url",
    "rebase",
    "inline",
    "base64",
    "assets"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "moox",
      "email": "m@moox.io"
    },
    {
      "name": "sergcen",
      "email": "sergcen@mail.ru"
    }
  ],
  "name": "postcss-url",
  "optionalDependencies": {},
  "publish_time": 1462132218336,
  "readme": "# postcss-url\n\n[![Travis Build Status](https://img.shields.io/travis/postcss/postcss-url/master.svg?label=unix%20build)](https://travis-ci.org/postcss/postcss-url)\n[![AppVeyor Build Status](https://img.shields.io/appveyor/ci/MoOx/postcss-url/master.svg?label=windows%20build)](https://ci.appveyor.com/project/MoOx/postcss-url)\n\n> [PostCSS](https://github.com/postcss/postcss) plugin to rebase, inline or copy on url().\n\n## Installation\n\n```console\n$ npm install postcss-url\n```\n\n## Usage\n\n```js\n// dependencies\nvar fs = require(\"fs\")\nvar postcss = require(\"postcss\")\nvar url = require(\"postcss-url\")\n\n// css to be processed\nvar css = fs.readFileSync(\"input.css\", \"utf8\")\n\n// process css\nvar output = postcss()\n  .use(url({\n    url: \"rebase\" // or \"inline\" or \"copy\"\n  }))\n  .process(css, {\n    // \"rebase\" mode need at least one of those options\n    // \"inline\" mode might need `from` option only\n    // \"copy\" mode need `from` and `to` option to work\n    from: \"src/stylesheet/index.css\",\n    to: \"dist/index.css\"\n  })\n  .css\n```\n\nCheckout [tests](test) for examples.\n\n### Options\n\n#### `url`\n\n_(default: `\"rebase\"`)_\n\n##### `url: \"rebase\"`\n\nAllow you to fix `url()` according to postcss `to` and/or `from` options (rebase to `to` first if available, otherwise `from` or `process.cwd()`).\n\n##### `url: \"inline\"`\n\nAllow you to inline assets using base64 encoding. Can use postcss `from` option to find ressources.\n\n##### `url: \"copy\"`\n\nAllow you to copy and rebase assets according to postcss `to`, `assetsPath` and `from` options (`assetsPath` is relative to the option `to`).\n\n##### `url: {Function}`\n\nCustom transform function. Takes following arguments:\n* `URL` – original url\n* `decl` - related postcss declaration object\n* `from` - from postcss option\n* `dirname` – dirname of processing file\n* `to` – from postcss option\n* `options` – plugin options\n* `result` – postcss result object\n\nAnd should return the transformed url.\nYou can use this option to adjust urls for CDN.\n\n#### `maxSize`\n_(default: `14`)_\n\nSpecify the maximum file size to inline (in kbytes)\n\n#### `filter`\n\nA regular expression e.g. `/\\.svg$/`, a [minimatch string](https://github.com/isaacs/minimatch) e.g. `'**/*.svg'` or a custom filter function to determine wether a file should be inlined.\n\n#### `fallback`\n\nThe url fallback method to use if max size is exceeded or url contains a hash.\nCustom transform functions are supported.\n\n#### `basePath`\n\nSpecify the base path where to search images from\n\n#### `assetsPath`\n\n_(default: `false`)_\n\nIf you specify an `assetsPath`, the assets files will be copied in that\ndestination\n\n#### `useHash`\n\n_(default: `false`)_\n\nIf set to `true` the copy method is going to rename the path of the files by a hash name\n\n---\n\n## Contributing\n\nWork on a branch, install dev-dependencies, respect coding style & run tests before submitting a bug fix or a feature.\n\n```console\n$ git clone https://github.com/postcss/postcss-url.git\n$ git checkout -b patch-1\n$ npm install\n$ npm test\n```\n\n## [Changelog](CHANGELOG.md)\n\n## [License](LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/postcss/postcss-url.git"
  },
  "scripts": {
    "lint": "eslint --fix .",
    "release": "npmpub",
    "test": "npm run lint && npm run tests",
    "tests": "tape test"
  },
  "version": "5.1.2"
}
