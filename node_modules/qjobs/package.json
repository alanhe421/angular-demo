{
  "_args": [
    [
      {
        "raw": "qjobs@^1.1.4",
        "scope": null,
        "escapedName": "qjobs",
        "name": "qjobs",
        "rawSpec": "^1.1.4",
        "spec": ">=1.1.4 <2.0.0",
        "type": "range"
      },
      "/Users/heqiang/WebstormProjects/GITHUB/angular4-demo/node_modules/karma"
    ]
  ],
  "_cnpm_publish_time": 1471424606925,
  "_from": "qjobs@^1.1.4",
  "_hasShrinkwrap": false,
  "_id": "qjobs@1.1.5",
  "_location": "/qjobs",
  "_nodeVersion": "4.2.4",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/qjobs-1.1.5.tgz_1471424604162_0.33236237801611423"
  },
  "_npmUser": {
    "name": "franck34",
    "email": "franck.tab@gmail.com"
  },
  "_npmVersion": "3.10.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "qjobs@^1.1.4",
    "scope": null,
    "escapedName": "qjobs",
    "name": "qjobs",
    "rawSpec": "^1.1.4",
    "spec": ">=1.1.4 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/karma"
  ],
  "_resolved": "http://registry.npm.taobao.org/qjobs/download/qjobs-1.1.5.tgz",
  "_shasum": "659de9f2cf8dcc27a1481276f205377272382e73",
  "_shrinkwrap": null,
  "_spec": "qjobs@^1.1.4",
  "_where": "/Users/heqiang/WebstormProjects/GITHUB/angular4-demo/node_modules/karma",
  "author": {
    "name": "Franck TABARY"
  },
  "bugs": {
    "url": "https://github.com/franck34/qjobs/issues"
  },
  "dependencies": {},
  "description": "qjobs is a simple and stupid queue job manager for nodejs",
  "devDependencies": {},
  "directories": {
    "example": "examples"
  },
  "dist": {
    "shasum": "659de9f2cf8dcc27a1481276f205377272382e73",
    "size": 4961,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/qjobs/download/qjobs-1.1.5.tgz"
  },
  "engines": {
    "node": ">=0.9"
  },
  "gitHead": "6b6ea2dd626799e946ab700e4c4902ab792d3bb2",
  "homepage": "https://github.com/franck34/qjobs#readme",
  "keywords": [
    "queue",
    "jobs",
    "job",
    "concurrency",
    "control"
  ],
  "license": "MIT",
  "main": "qjobs.js",
  "maintainers": [
    {
      "name": "franck34",
      "email": "franck.tab@gmail.com"
    }
  ],
  "name": "qjobs",
  "optionalDependencies": {},
  "publish_time": 1471424606925,
  "readme": "[![Build Status](https://secure.travis-ci.org/franck34/qjobs.png)](http://travis-ci.org/franck34/qjobs)\n\n**qjobs**\n==================\n***Efficient queue job manager module for nodejs.***\n\nFeatures\n--------------\n* Concurrency limiter\n* Dynamic queue, a job can be added while the queue is running\n* Optional delay before continuing after max concurrency has been reached\n* Support of pause/unpause\n* Events emitter based: start, end, sleep, continu, jobStart, jobEnd\n* Quick statistic function, so you can know where the queue is, at regular interval\n\nFor what it can be usefull ?\n---------------------\nJobs which needs to run in parallels, but in a controled maner, example: \n* Network scanners\n* Parallels monitoring jobs\n* Images/Videos related jobs \n\n\nCompatibility :\n------------------\n* not tested with nodejs < 0.10\n\n\nExamples\n--------------------\n\n(take a look at tests directory if you are looking for running samples)\n\n\n```\nvar qjobs = new require('./qjobs');\n                                \n// My non blocking main job     \nvar myjob = function(args,next) {\n    setTimeout(function() {\n        console.log('Do something interesting here',args);\n        next();\n    },1000);\n}\n\nvar q = new qjobs({maxConcurrency:10});\n\n// Let's add 30 job to the queue\nfor (var i = 0; i<30; i++) {\n    q.add(myjob,[i,'test '+i]);\n}\n\nq.on('start',function() {\n    console.log('Starting ...');\n});\n\nq.on('end',function() {\n    console.log('... All jobs done');\n});\n\nq.on('jobStart',function(args) {\n    console.log('jobStart',args);\n});\n\nq.on('jobEnd',function(args) {\n\n    console.log('jobend',args);\n\n    // If i'm jobId 10, then make a pause of 5 sec\n\n    if (args._jobId == 10) {\n        q.pause(true);\n        setTimeout(function() {\n            q.pause(false);\n        },5000);\n    }\n});\n\nq.on('pause',function(since) {\n    console.log('in pause since '+since+' milliseconds');\n});\n\nq.on('unpause',function() {\n    console.log('pause end, continu ..');\n});\n\nq.run();\n\n//q.abort() will empty jobs list\n\n```\n\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/franck34/qjobs.git"
  },
  "scripts": {
    "test": "make test"
  },
  "version": "1.1.5"
}
